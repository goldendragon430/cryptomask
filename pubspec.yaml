name: wallet
description: zkZeroSea Wallet
              Store all your zkSync and other ERC20 coins and
              tokens in one secure wallet. zkZeroSea Wallet allows
              you easily receive, send cryptocurrencies like
              Ethereum, ERC20 tokens, BEP20 tokens and many more
              — all in one lightweight, user-friendly
              application.

              zkZeroSea Wallet functionality opens the gate to
              a brand new financial system and you are in
              charge here!

              MULTI CURRENCY CRYPTO WALLET

              Now, you do not have to sign up for multiple
              wallets for all of your cryptos. Favorite digital
              currencies can be stored and managed in one
              neatly designed application. We never stop expanding!

              NON-CUSTODIAL SECURITY

              We give you full control over your crypto
              wallet private keys. Guarda encrypts all your
              data and securely stores it on the device itself
              — no one can gain access to your funds
              except you. Besides, you can enable Touch ID
              to access the crypto storage without having
              to type the password every time.

              Features
              Create a wallet using 12 words Secret Recovery Key (BIP-39 Standard)
              Create multiple accounts based on a secret recovery key.
              User can able to Switch networks (Testnet included).
              Import wallet using Secret Recovery Key.
              Export wallet using Private key.
              Show balance of ETH and ERC20 tokens in native currency.
              Change any supported fiat currency.
              Wallet address with QR code and user can also share public address.
              Transaction history of all transactions including token transfers and token swap/
              Login with a password.
              Receive and send ETH and ERC20 Tokens.
              Enhanced gas settings UI.
              Swap ERC20 Tokens.
              Import custom tokens with the token address.
              Showcase your NFT in the wallet.
              Receive and send NFT collectables.
              Import NFT that they own.
              Supports multiple languages with RTL support can add more easily.
              Very easy to change the color scheme, just within a minute
              View account on Etherscan.
              Import existing account using private key.
              Reset and create a new wallet.
              Support Stable coins

              MOST EFFICIENT TECHNICAL SUPPORT
              Our customer support team is here 24/7 to
              answer all your questions. We value the time
              of our users — our support never takes more
              than 5 minutes to answer your requests!



# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
version: 1.0.1+8

environment:
  sdk: ">=2.17.3 <3.0.0"

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter
  flutter_localizations:
    sdk: flutter    
  intl: ^0.17.0
  web3dart: 2.3.5
  introduction_screen: ^3.0.1
  flutter_svg: ^1.1.4
  google_fonts: ^3.0.1
  flutter_bloc: ^8.1.1
  flutter_secure_storage: ^5.0.0-beta.4
  dio: ^4.0.6
  qr_flutter: ^4.0.0
  share_plus: ^4.0.10+1
  webview_flutter: ^3.0.4
  hive: ^2.2.3
  rflutter_alert: ^2.0.4
  responsive_builder: ^0.4.2
  decimal: ^2.2.0
  mobile_scanner: ^2.0.0
  bip39: ^1.0.6
  ed25519_hd_key: ^2.2.0
  dart_bip32_bip44: ^0.2.0
  ethers: ^0.0.1+3
  slider_button: ^2.0.0
  equatable: ^2.0.5
  cached_network_image: ^3.2.1
  get: ^4.6.5
  lottie: ^2.0.0
  in_app_update: ^4.0.1
  new_version: ^0.3.1
  url_launcher: ^6.1.7
  eth_sig_util: ^0.0.9

  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^1.0.2

dev_dependencies:
  hive_generator: ^1.1.3
  build_runner: ^2.2.1
  flutter_test:
    sdk: flutter

  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^2.0.0
  rename: ^2.0.1

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true
  generate: true


  # To add assets to your application, add an assets section, like this:
  assets:
     - assets/vector/
     - assets/images/
     - assets/animations/
     - assets/js/



  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages
